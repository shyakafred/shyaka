(1) Write a Shell Scripts that takes three numbers on the command line and does the following
       - Checks that the number of command line arguments is correct (3). If not write an error message in a file called error.txt and exit
       - If the number of command line arguments is correct write the numbers in a file called numbers, in ascending order.

Solution
#!/bin/bash

# Check if the number of arguments is not equal to 3
if [ $# -ne 3 ]; then
    echo "Error: The script requires exactly 3 arguments." > error.txt
    exit 1
fi

# If the number of arguments is correct, sort the numbers in ascending order and write them to a file
echo -e "$1\n$2\n$3" | sort -n > numbers.txt
(2) Write A shell script that takes a directory as a command line arguments and writes the number of files and number of subfolders in a file called accounts.txt
#!/bin/bash

# Check if the number of arguments is not equal to 1
if [ $# -ne 1 ]; then
    echo "Error: The script requires exactly 1 argument." > error.txt
    exit 1
fi

# If the number of arguments is correct, count the number of files and subdirectories
num_files=$(find "$1" -type f | wc -l)
num_dirs=$(find "$1" -type d | wc -l)

# Write the counts to accounts.txt
echo "Number of files: $num_files" > accounts.txt
echo "Number of subdirectories: $num_dirs" >> accounts.txt

(3) Write A Shell Script that takes a simple arithmetic expression involving integers only and evaluates the value of the expression.
For example if the input is  5 + 7 it should display 5  + 7 =12
#!/bin/bash

# Check if the number of arguments is not equal to 1
if [ $# -ne 1 ]; then
    echo "Error: The script requires exactly 1 argument." > error.txt
    exit 1
fi

# If the number of arguments is correct, evaluate the arithmetic expression
result=$(echo "$1" | bc)

# Display the result
echo "$1 = $result"



(4) Write a Sell script that takes a positive integer from the command line and displays its factorial. If the number entered is negative, display an error on the standard output.
#!/bin/bash

# Check if the number of arguments is not equal to 1
if [ $# -ne 1 ]; then
    echo "Error: The script requires exactly 1 argument."
    exit 1
fi

# Check if the argument is not a positive integer
if ! [[ $1 =~ ^[0-9]+$ ]]; then
    echo "Error: The argument must be a positive integer."
    exit 1
fi

# Calculate the factorial
factorial=1
for (( i=1; i<=$1; i++ ))
do
  factorial=$((factorial * i))
done

# Display the factorial
echo "The factorial of $1 is $factorial."

(5) Write a shell script that takes two folders from the command lines and deletes from directory 1 all the files that are also in directory 2. Check for the correct number of arguments, and display an appropriate message if the number of arguments is incorrect or if any of the arguments is not a folder.
#!/bin/bash

# Check if the number of arguments is not equal to 2
if [ $# -ne 2 ]; then
    echo "Error: The script requires exactly 2 arguments."
    exit 1
fi

# Check if the arguments are not directories
if [ ! -d "$1" ] || [ ! -d "$2" ]; then
    echo "Error: Both arguments must be directories."
    exit 1
fi

# Delete from directory 1 all the files that are also in directory 2
for file in "$1"/*; do
    if [ -f "$file" ] && [ -f "$2/$(basename "$file")" ]; then
        rm "$file"
    fi
done

echo "Operation completed successfully."

